webpackJsonp([9,113],{1257:function(a,e){a.exports={content:'<style>.transformer-react-render{border:1px dashed #959da5;border-radius:5px;display:block}.transformer-react-render-container>pre{max-height:400px;transition:all .2s ease}.transformer-react-render-container>pre.focused{max-height:none;box-shadow:0 0 6px rgba(0,0,0,.2)}</style><p>题目：刷脸签到系统<br>姓名：余聪<br>学号：19130126</p><p>最近两周，主要完成了 1. 项目的外网部署。 2. 将站点封装成跨平台app。 3. SEO 优化与站点提交。</p><p>使该项目能够方便得被访问，调高该web应用的可用性。 现在只需要使用谷歌浏览器访问 <code>https://face.moyuyc.xyz</code> 即可查看。</p><h2 id=项目的外网部署><a href=#%E9%A1%B9%E7%9B%AE%E7%9A%84%E5%A4%96%E7%BD%91%E9%83%A8%E7%BD%B2 aria-hidden=true><span class="icon icon-link"></span></a>项目的外网部署</h2><h3 id=数据迁移><a href=#%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB aria-hidden=true><span class="icon icon-link"></span></a>数据迁移</h3><p>部署首先需要考虑的，便是数据库的迁移了。为了方便数据的迁移，对于人脸录入表 (<code>face-import</code>) 中的人脸图片，没有将上传的样本数据存储在服务器中，而是存在 <a href=https://sm.ms>sm.ms</a> 免费图床中，得到一个 <code>face_url</code> 字段，每次启动服务器之前都得进行样本的训练或者训练数据的读取；而且每次上传样本或者删除样本后，服务器都需要重新训练保存样本，重新生成一套特征脸。并且在开启服务器的环境和纯粹的数据处理的环境对于数据库的处理是不一样的，在服务器环境，需要开启数据库连接池，每次都从中去取出连接进行数据操作；而纯粹的读取数据库，得到<code>face_url</code>进行人脸的预处理或训练，则只需要每次单独的 开启连接 -> 读取数据 -> 关闭连接 即可，否则程序会一直运行下去，因为数据库连接池没关闭。</p><h3 id=代码迁移><a href=#%E4%BB%A3%E7%A0%81%E8%BF%81%E7%A7%BB aria-hidden=true><span class="icon icon-link"></span></a>代码迁移</h3><p>源码都部署在 GitHub 上，所以在联网的服务器上，直接 <code>git clone</code> 就可以得到源码了（原始证照和预处理后的证照、训练的 yaml 数据都没提交至 GitHub，所以代码库还是挺小的）。</p><h3 id=环境配置><a href=#%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE aria-hidden=true><span class="icon icon-link"></span></a>环境配置</h3><p>服务器系统环境为 Ubuntu，在 Ubuntu 上安装 opencv，Ubuntu 上可没有 Homebrew “神器”，所以只能下载源码包，自己进行编译连接，生成动态链接库。</p><p>安装好 node + npm + nvm，node 版本 ≥7.0，以及 mysql，导入 gp.sql。</p><p>再在服务器执行 <code>npm install</code>（安装项目依赖包，各个目录下都有自己独立的依赖包，前端目录则不必安装，因为只需要其产生的代码） => 下载脚本 => 预处理脚本 => 训练样本脚本 => 启动服务器</p><img src=false width=391 height=634 data-src=https://ooo.0o0.ooo/2017/05/01/59072a26af35d.jpg><h3 id=nginx--https><a href=#nginx--https aria-hidden=true><span class="icon icon-link"></span></a>nginx + https</h3><p>但是服务器启动后，外网还是不能直接访问，需要通过 nginx 反向代理，同时解析域名至服务器 IP，为了 Chrome 浏览器安全可以打开摄像头，还需要开启 HTTPs 协议，我使用的是腾讯云免费的一年证书，然后 nginx 配置后即可。</p><p>配置如下：</p><pre><code data-query={} data-lang>upstream p8778 {\n    server localhost:8778;\n}\n\nserver {\n    listen 443 ssl;\n\n    server_name  face.moyuyc.xyz;\n    ssl_certificate /etc/nginx/.ssl/face.moyuyc.xyz.crt;\n    ssl_certificate_key /etc/nginx/.ssl/face.moyuyc.xyz.key;\n\n    add_header Strict-Transport-Security "max-age=31536000";\n    ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;\n    ssl_ciphers    HIGH:!aNULL:!MD5;\n\n    location / {\n        proxy_pass http://p8778;\n\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection "upgrade";\n    }\n\n}\n</code></pre><h2 id=将站点封装成跨平台app><a href=#%E5%B0%86%E7%AB%99%E7%82%B9%E5%B0%81%E8%A3%85%E6%88%90%E8%B7%A8%E5%B9%B3%E5%8F%B0app aria-hidden=true><span class="icon icon-link"></span></a>将站点封装成跨平台app</h2><p>为了方便师生使用，还使用 <code>nativefier</code> 将站点打包成 PC Desktop，其实就是将站点 URL 和 Chrome 内核组合成一个 Application</p><img src=false alt=学生签到-1 width=1440 height=810 data-src=https://ooo.0o0.ooo/2017/01/22/588485d5c5134.jpg> <img src=false alt=学生签到-2 width=1440 height=810 data-src=https://ooo.0o0.ooo/2017/01/22/58848618b06ff.jpg><h3 id=desktop打包脚本><a href=#desktop%E6%89%93%E5%8C%85%E8%84%9A%E6%9C%AC aria-hidden=true><span class="icon icon-link"></span></a>Desktop打包脚本</h3><pre><code class="hljs language-text"data-query={} data-lang=text>// package.json\n// usage: npm run script-name\n\n<span class=hljs-comment>"app:mac64"</span>: <span class=hljs-comment>"set ELECTRON_MIRROR=https://npm.taobao.org/mirrors/electron/ &amp&amp nativefier -c -a x64 -p mac --insecure -n 古南师大刷脸签到 https://face.moyuyc.xyz/ -i desktop/logos/logo.icns --disable-dev-tools --disable-context-menu desktop"</span>,\n<span class=hljs-comment>"app:mac32"</span>: <span class=hljs-comment>"set ELECTRON_MIRROR=https://npm.taobao.org/mirrors/electron/ &amp&amp nativefier -c -a ia32 -p mac --insecure -n 古南师大刷脸签到 \\"</span>https://face.moyuyc.xyz/\\<span class=hljs-comment>" -i desktop/logos/logo.icns --disable-dev-tools --disable-context-menu desktop"</span>,\n<span class=hljs-comment>"app:mac"</span>: <span class=hljs-comment>"npm run app:mac32 &amp npm run app:mac64"</span>,\n<span class=hljs-comment>"app:win"</span>: <span class=hljs-comment>"npm run app:win32 &amp npm run app:win64"</span>,\n<span class=hljs-comment>"app:win32"</span>: <span class=hljs-comment>"set ELECTRON_MIRROR=https://npm.taobao.org/mirrors/electron/ &amp&amp nativefier -c -p win32 -a x64 --insecure -n 古南师大刷脸签到 \\"</span>https://face.moyuyc.xyz/\\<span class=hljs-comment>" -i desktop/logos/logo.png --disable-dev-tools --disable-context-menu desktop"</span>,\n<span class=hljs-comment>"app:win64"</span>: <span class=hljs-comment>"set ELECTRON_MIRROR=https://npm.taobao.org/mirrors/electron/ &amp&amp nativefier -c -p win32 -a ia32 --insecure -n 古南师大刷脸签到 \\"</span>https://face.moyuyc.xyz/\\<span class=hljs-comment>" -i desktop/logos/logo.png --disable-dev-tools --disable-context-menu desktop"</span>,</code></pre><h2 id=seo-优化与站点提交><a href=#seo-%E4%BC%98%E5%8C%96%E4%B8%8E%E7%AB%99%E7%82%B9%E6%8F%90%E4%BA%A4 aria-hidden=true><span class="icon icon-link"></span></a>SEO 优化与站点提交</h2><p>搜索引擎优化（search engine optimization，SEO），是一种通过了解搜索引擎的运作规则来调整网站，以及提高目的网站在有关搜索引擎内排名的方式。所谓“针对搜索引擎作最优化的处理”，是指为了要让网站更容易被搜索引擎接受。</p><ol><li>站点提交</li><li><p>添加 <code>robots.txt</code></p><pre><code data-query={} data-lang>User-agent: *\nSitemap: https://face.moyuyc.xyz/sitemap.txt\n</code></pre></li><li><p>站点地图</p><pre><code data-query={} data-lang>https://face.moyuyc.xyz/about\nhttps://face.moyuyc.xyz/face-import\nhttps://face.moyuyc.xyz/admin\n</code></pre></li></ol><img src=false alt width=909 height=662 data-src=https://ooo.0o0.ooo/2017/01/22/5884a45f49cae.jpg>',extra:{"_image-loader_":[],_progressive_:[]}}}});
//# sourceMappingURL=毕设周记4.js.map