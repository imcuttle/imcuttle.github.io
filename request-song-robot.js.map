{"version":3,"sources":["webpack:///request-song-robot.js","webpack:///./source/_articles/request-song-robot.md"],"names":["webpackJsonp","1223","module","exports","content","extra","_image-loader_","_progressive_"],"mappings":"AAAAA,cAAc,GAAG,MAEXC,KACA,SAAUC,EAAQC,GCFxBD,EAAAC,SACAC,QAAA,2gIACAC,OACAC,oBACAC","file":"request-song-robot.js","sourcesContent":["webpackJsonp([42,113],{\n\n/***/ 1223:\n/***/ (function(module, exports) {\n\n\t/*markdown-loader*/\n\tmodule.exports = {\n\t  \"content\": \"<style>.transformer-react-render{border:1px dashed #959da5;border-radius:5px;display:block}.transformer-react-render-container>pre{max-height:400px;transition:all .2s ease}.transformer-react-render-container>pre.focused{max-height:none;box-shadow:0 0 6px rgba(0,0,0,.2)}</style><p>偶然的机会，发现了B站的点歌机器人，觉得挺好玩的就自己做了一个简易版点歌机器人，预览如下：</p><img src=false alt=ClipboardImage width=1440 height=733 data-src=http://obu9je6ng.bkt.clouddn.com/FjcQLjCVCd6CuaU2UII4ZpM1hhsE?imageslim><!--more-->## 功能<ol><li>使用websocket，支持多人同时点歌，发送弹幕聊天</li><li>具有搜索suggestion，用户体验更佳</li><li>点击mv视频右上角可以缩小放大，不影响用户其他操作</li><li>具有mv的资源，优先播放mv</li><li>对于未播放的已点歌曲，可以进行取消</li><li>...</li></ol><h2 id=其他说明><a href=#%E5%85%B6%E4%BB%96%E8%AF%B4%E6%98%8E aria-hidden=true><span class=\\\"icon icon-link\\\"></span></a>其他说明</h2><p>由于是实时多人点歌，所以不能够跳过当前播放歌曲，也不能跳跃播放，Mv只能够重头开始播放，mp3能够根据线上其他用户的播放进度进行同步</p><p><strong>音乐资源均来自网易云音乐，该程序仅用于个人学习，不得用于任何商业用途</strong></p><p>关于网易云音乐的接口规则，我就不多说了，因为关于商业机密，可能吃官司的,有兴趣的可以私下找我</p><h2 id=技术沉淀><a href=#%E6%8A%80%E6%9C%AF%E6%B2%89%E6%B7%80 aria-hidden=true><span class=\\\"icon icon-link\\\"></span></a>技术沉淀</h2><img src=false alt=ClipboardImage width=1435 height=352 data-src=http://obu9je6ng.bkt.clouddn.com/FjewUWc85RsP7nJjQ3e4KGEgsKFO?imageslim> 如上图，网易云音乐的请求参数是做了加密处理的。 关于网易云音乐请求参数的加密方法，简单提下 ```js<p>aesRsaEncrypt: function (text) { var secKey = createSecretKey(16); return { params: aesEncrypt(aesEncrypt(text, nonce), secKey), encSecKey: rsaEncrypt(secKey, pubKey, modulus) } }</p><pre><code data-query={} data-lang>&lt;img src=\\\"http://obu9je6ng.bkt.clouddn.com/Fn_ldGpK_PAxokq0ZfW2CaDTPW2O?imageslim\\\" alt=\\\"ClipboardImage\\\" width=\\\"553\\\" height=\\\"434\\\" />\\n\\n`secKey`为本地随机生成的密文，通过rsa非对称加密算法加密，然后网易服务器通过约定好的与`pubKey`对应的另一个因数进行解密，得到`secKey`, 然后通过两次aes逆运算就能得到`text`，也就是真实的参数了。  \\n\\n这样做的好处不言而喻，不法分子很难破解抓取到的请求数据  \\n但服务器负担加重了，每次提供服务前，还得先去破解一番\\n\\n另外！网易还做了一点安全措施，调用接口得到音乐url是有时间限制的!!!\\n\\n&lt;img src=\\\"http://obu9je6ng.bkt.clouddn.com/Fq-T4HHbU4OH-Yjq2mkFu7o0aCov?imageslim\\\" alt=\\\"ClipboardImage\\\" width=\\\"1435\\\" height=\\\"342\\\" />\\n\\n所以，不能够在点歌的时候就把音乐url抓取下来保存，必须得有用户需要播放的时候再抓取url  \\n而且云音乐的mvurl不支持跨域访问，所以我只好做个代理，转发视频数据流了，但这样做的不好就是mv播放不能跳跃播放（如最上方动图所示），不知有没有大牛知道如何解决这个问题\\n\\n```javascript\\n\\nlet url = req.url\\nlet q = URL.parse(req.url, true).query\\nif(url.startsWith(SUFFIX)) {\\n    if(q.id!=0)\\n        gs.getMvUrl(q.id)\\n            .then(json => {\\n                if(json.hurl || json.murl) {\\n                    res.writeHead(200, {'Content-Type': u.suffix2Type('mp4')});\\n                    var s = gs.getStream(json.hurl || json.murl)\\n                    s.on('error', (err) => {\\n                        s.close &amp&amp s.close()\\n                        console.error(err)\\n                        res.end()\\n                    })\\n                    //传递MV视频数据流\\n                    s.pipe(res)\\n                } else {\\n                    res.writeHead(500);\\n                    res.end('Error '+JSON.stringify(json))\\n                }\\n            })\\n    else {\\n        res.writeHead(500);\\n        res.end('Error')\\n    }\\n    return\\n}\\n</code></pre><h2 id=源码与使用><a href=#%E6%BA%90%E7%A0%81%E4%B8%8E%E4%BD%BF%E7%94%A8 aria-hidden=true><span class=\\\"icon icon-link\\\"></span></a>源码与使用</h2><p><a href=https://github.com/moyuyc/request-song-robot>song-robot</a></p><pre><code class=\\\"hljs language-sh\\\"data-query={} data-lang=sh>npm i song-robot -g\\nsong-robot -p 9888\\nopen http://localhost:9888</code></pre><h2 id=参考资料><a href=#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99 aria-hidden=true><span class=\\\"icon icon-link\\\"></span></a>参考资料</h2><p>referer <a href=https://zh.wikipedia.org/zh/HTTP%E5%8F%83%E7%85%A7%E4%BD%8D%E5%9D%80>https://zh.wikipedia.org/zh/HTTP%E5%8F%83%E7%85%A7%E4%BD%8D%E5%9D%80</a></p><p>网易云api破解 <a href=http://qianzewei.com/2015/12/10/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90api%E6%95%B4%E7%90%86/#>http://qianzewei.com/2015/12/10/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90api%E6%95%B4%E7%90%86/#</a></p><p>node crypto<br><a href=https://nodejs.org/api/crypto.html>https://nodejs.org/api/crypto.html</a></p><p>输入框光标变色<br><a href=http://jsfiddle.net/8k1k0awb/>http://jsfiddle.net/8k1k0awb/</a></p>\",\n\t  \"extra\": {\n\t    \"_image-loader_\": [],\n\t    \"_progressive_\": []\n\t  }\n\t}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// request-song-robot.js","/*markdown-loader*/\nmodule.exports = {\n  \"content\": \"<style>.transformer-react-render{border:1px dashed #959da5;border-radius:5px;display:block}.transformer-react-render-container>pre{max-height:400px;transition:all .2s ease}.transformer-react-render-container>pre.focused{max-height:none;box-shadow:0 0 6px rgba(0,0,0,.2)}</style><p>偶然的机会，发现了B站的点歌机器人，觉得挺好玩的就自己做了一个简易版点歌机器人，预览如下：</p><img src=false alt=ClipboardImage width=1440 height=733 data-src=http://obu9je6ng.bkt.clouddn.com/FjcQLjCVCd6CuaU2UII4ZpM1hhsE?imageslim><!--more-->## 功能<ol><li>使用websocket，支持多人同时点歌，发送弹幕聊天</li><li>具有搜索suggestion，用户体验更佳</li><li>点击mv视频右上角可以缩小放大，不影响用户其他操作</li><li>具有mv的资源，优先播放mv</li><li>对于未播放的已点歌曲，可以进行取消</li><li>...</li></ol><h2 id=其他说明><a href=#%E5%85%B6%E4%BB%96%E8%AF%B4%E6%98%8E aria-hidden=true><span class=\\\"icon icon-link\\\"></span></a>其他说明</h2><p>由于是实时多人点歌，所以不能够跳过当前播放歌曲，也不能跳跃播放，Mv只能够重头开始播放，mp3能够根据线上其他用户的播放进度进行同步</p><p><strong>音乐资源均来自网易云音乐，该程序仅用于个人学习，不得用于任何商业用途</strong></p><p>关于网易云音乐的接口规则，我就不多说了，因为关于商业机密，可能吃官司的,有兴趣的可以私下找我</p><h2 id=技术沉淀><a href=#%E6%8A%80%E6%9C%AF%E6%B2%89%E6%B7%80 aria-hidden=true><span class=\\\"icon icon-link\\\"></span></a>技术沉淀</h2><img src=false alt=ClipboardImage width=1435 height=352 data-src=http://obu9je6ng.bkt.clouddn.com/FjewUWc85RsP7nJjQ3e4KGEgsKFO?imageslim> 如上图，网易云音乐的请求参数是做了加密处理的。 关于网易云音乐请求参数的加密方法，简单提下 ```js<p>aesRsaEncrypt: function (text) { var secKey = createSecretKey(16); return { params: aesEncrypt(aesEncrypt(text, nonce), secKey), encSecKey: rsaEncrypt(secKey, pubKey, modulus) } }</p><pre><code data-query={} data-lang>&lt;img src=\\\"http://obu9je6ng.bkt.clouddn.com/Fn_ldGpK_PAxokq0ZfW2CaDTPW2O?imageslim\\\" alt=\\\"ClipboardImage\\\" width=\\\"553\\\" height=\\\"434\\\" />\\n\\n`secKey`为本地随机生成的密文，通过rsa非对称加密算法加密，然后网易服务器通过约定好的与`pubKey`对应的另一个因数进行解密，得到`secKey`, 然后通过两次aes逆运算就能得到`text`，也就是真实的参数了。  \\n\\n这样做的好处不言而喻，不法分子很难破解抓取到的请求数据  \\n但服务器负担加重了，每次提供服务前，还得先去破解一番\\n\\n另外！网易还做了一点安全措施，调用接口得到音乐url是有时间限制的!!!\\n\\n&lt;img src=\\\"http://obu9je6ng.bkt.clouddn.com/Fq-T4HHbU4OH-Yjq2mkFu7o0aCov?imageslim\\\" alt=\\\"ClipboardImage\\\" width=\\\"1435\\\" height=\\\"342\\\" />\\n\\n所以，不能够在点歌的时候就把音乐url抓取下来保存，必须得有用户需要播放的时候再抓取url  \\n而且云音乐的mvurl不支持跨域访问，所以我只好做个代理，转发视频数据流了，但这样做的不好就是mv播放不能跳跃播放（如最上方动图所示），不知有没有大牛知道如何解决这个问题\\n\\n```javascript\\n\\nlet url = req.url\\nlet q = URL.parse(req.url, true).query\\nif(url.startsWith(SUFFIX)) {\\n    if(q.id!=0)\\n        gs.getMvUrl(q.id)\\n            .then(json => {\\n                if(json.hurl || json.murl) {\\n                    res.writeHead(200, {'Content-Type': u.suffix2Type('mp4')});\\n                    var s = gs.getStream(json.hurl || json.murl)\\n                    s.on('error', (err) => {\\n                        s.close &amp&amp s.close()\\n                        console.error(err)\\n                        res.end()\\n                    })\\n                    //传递MV视频数据流\\n                    s.pipe(res)\\n                } else {\\n                    res.writeHead(500);\\n                    res.end('Error '+JSON.stringify(json))\\n                }\\n            })\\n    else {\\n        res.writeHead(500);\\n        res.end('Error')\\n    }\\n    return\\n}\\n</code></pre><h2 id=源码与使用><a href=#%E6%BA%90%E7%A0%81%E4%B8%8E%E4%BD%BF%E7%94%A8 aria-hidden=true><span class=\\\"icon icon-link\\\"></span></a>源码与使用</h2><p><a href=https://github.com/moyuyc/request-song-robot>song-robot</a></p><pre><code class=\\\"hljs language-sh\\\"data-query={} data-lang=sh>npm i song-robot -g\\nsong-robot -p 9888\\nopen http://localhost:9888</code></pre><h2 id=参考资料><a href=#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99 aria-hidden=true><span class=\\\"icon icon-link\\\"></span></a>参考资料</h2><p>referer <a href=https://zh.wikipedia.org/zh/HTTP%E5%8F%83%E7%85%A7%E4%BD%8D%E5%9D%80>https://zh.wikipedia.org/zh/HTTP%E5%8F%83%E7%85%A7%E4%BD%8D%E5%9D%80</a></p><p>网易云api破解 <a href=http://qianzewei.com/2015/12/10/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90api%E6%95%B4%E7%90%86/#>http://qianzewei.com/2015/12/10/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90api%E6%95%B4%E7%90%86/#</a></p><p>node crypto<br><a href=https://nodejs.org/api/crypto.html>https://nodejs.org/api/crypto.html</a></p><p>输入框光标变色<br><a href=http://jsfiddle.net/8k1k0awb/>http://jsfiddle.net/8k1k0awb/</a></p>\",\n  \"extra\": {\n    \"_image-loader_\": [],\n    \"_progressive_\": []\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/picidae/lib/lib/loaders/markdown-loader!./source/_articles/request-song-robot.md\n// module id = 1223\n// module chunks = 42"],"sourceRoot":""}