webpackJsonp([38,90],{1025:function(s,n){s.exports={content:'<h1 id="前言"><a href="#%E5%89%8D%E8%A8%80" aria-hidden="true"><span class="icon icon-link"></span></a>前言</h1>\n<p>最近，在「计算机网络」的课堂上，老师讲到了应用层相关的协议，<code>FTP/HTTP/SMTP...</code>理论结合实践才能产生最大的效益，所以我便利用<code>nodejs</code>中的<code>net</code>包，进行了相关的网络编程。</p>\n<!--more-->\n<h1 id="知识介绍"><a href="#%E7%9F%A5%E8%AF%86%E4%BB%8B%E7%BB%8D" aria-hidden="true"><span class="icon icon-link"></span></a>知识介绍</h1>\n<img src="http://obu9je6ng.bkt.clouddn.com/Fh2Isz1kNHsZnFHywDXMroNr3GYY?imageslim" alt="ClipboardImage" width="1452" height="500" />\n> 如图,FTP协议使用了2个tcp连接，一个是控制连接（服务器端默认端口为21），一个是数据传输连接（服务器端默认端口为20），客户端也需要对应的使用两个不同的端口进行连接。\n<img src="http://obu9je6ng.bkt.clouddn.com/FhmMKeDvkx7dnFvjvVlhpILiVJK5?imageslim" alt="ClipboardImage" width="1133" height="899" />\n> 如图\n> 1. 在服务器21端口有新的连接到来后，服务器发送220码响应\n> 2. 客户端利用该连接，向服务器21端口发送`USER`命令\n> 3. 服务器响应331\n> 4. 客户端发送`PASS`命令\n> 5. 服务器响应230\n> 6. 客户端发送`PORT`命令（客户选择端口号发送，服务器20端口将会与客户端该端口建立tcp连接，这就是数据传输连接）\n> 7. 服务器响应150\n> 8. 客户端发送`TYPE`命令（给服务器端口21，表示更改文件的类型）\n> 9. 服务器响应200\n> 10. 客户端发送`STRU`命令（给服务器端口21，表示更改文件的数据的组织）\n> 11. 服务器响应200\n> 12. 客户端发送`STOR`命令（给服务器端口21，表示发送文件至服务器）\n> 13. 服务器响应250\n> 14. 利用6中建立的数据传输连接传输数据\n> 15. 服务器响应226\n> 16. 客户端发送`QUIT`命令（给服务器端口21，表示断开连接）\n> 17. 服务器响应221\n<p><a href="https://www.w3.org/Protocols/rfc959/4_FileTransfer.html">更多信息参考</a></p>\n<h1 id="代码"><a href="#%E4%BB%A3%E7%A0%81" aria-hidden="true"><span class="icon icon-link"></span></a>代码</h1>\n<pre><code class="hljs language-javascript" data-query="{}" data-lang="javascript"><span class="hljs-keyword">var</span> net = <span class="hljs-built_in">require</span>(<span class="hljs-string">\'net\'</span>);\n\n<span class="hljs-keyword">var</span> socket = net.createConnection(<span class="hljs-number">21</span>,<span class="hljs-string">\'172.21.59.162\'</span>);<span class="hljs-comment">//new net.Stream();</span>\n\nsocket.on(<span class="hljs-string">\'connection\'</span>,<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'connected\'</span>);\n});\nsocket.on(<span class="hljs-string">\'end\'</span>,<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>{\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'disconnected\'</span>);\n});\n\nprocess.stdin.pipe(socket).pipe(process.stdout);\nsocket.write(<span class="hljs-string">\'USER anonymous\\r\\n\'</span>);\nsocket.write(<span class="hljs-string">\'PASS guest\\r\\n\'</span>);\nsocket.write(<span class="hljs-string">\'PWD\\r\\n\'</span>);\nsocket.write(<span class="hljs-string">\'PORT 172,21,59,162,34,184\\r\\n\'</span>);<span class="hljs-comment">//172,21,59,162:客户端IP  34,184:10进制表示端口，即34*256+184=8888</span>\n<span class="hljs-comment">// socket.write(\'LIST movie\\r\\n\');</span>\n<span class="hljs-comment">//socket.write(\'TYPE I\\r\\n\');</span>\nsocket.write(<span class="hljs-string">\'RETR bootstrap.zip\\r\\n\'</span>);<span class="hljs-comment">//下载服务器端文件</span>\n<span class="hljs-comment">// socket.write(\'LIST /FTP\\r\\n\');</span>\n<span class="hljs-keyword">const</span> client = net.createServer(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">s</span>) </span>{\n    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">\'client new connect\'</span>);\n    s.on(<span class="hljs-string">\'connect\'</span>,()=>{\n        <span class="hljs-built_in">console</span>.info(<span class="hljs-string">\'client new connect\'</span>);\n    });\n    s.pipe(<span class="hljs-built_in">require</span>(<span class="hljs-string">\'fs\'</span>).createWriteStream(<span class="hljs-string">\'ftpfile.zip\'</span>));<span class="hljs-comment">//保存服务器服务器数据</span>\n    s.on(<span class="hljs-string">\'error\'</span>,<span class="hljs-built_in">console</span>.error)\n}).listen(<span class="hljs-number">8888</span>);<span class="hljs-comment">//新的客户端端口</span></code></pre>\n<h1 id="总结"><a href="#%E6%80%BB%E7%BB%93" aria-hidden="true"><span class="icon icon-link"></span></a>总结</h1>\n<p>学习了node的相关网络编程，理解FTP协议，自己造轮子。</p>\n',extra:{}}}});