{"version":3,"sources":["webpack:///npm-cached-option.js","webpack:///./source/_articles/npm-cached-option.md"],"names":["webpackJsonp","1211","module","exports","content","extra","_image-loader_","_progressive_"],"mappings":"AAAAA,cAAc,GAAG,MAEXC,KACA,SAAUC,EAAQC,GCFxBD,EAAAC,SACAC,QAAA,o7CACAC,OACAC,oBACAC","file":"npm-cached-option.js","sourcesContent":["webpackJsonp([53,113],{\n\n/***/ 1211:\n/***/ (function(module, exports) {\n\n\t/*markdown-loader*/\n\tmodule.exports = {\n\t  \"content\": \"<style>.transformer-react-render{border:1px dashed #959da5;border-radius:5px;display:block}.transformer-react-render-container>pre{max-height:400px;transition:all .2s ease}.transformer-react-render-container>pre.focused{max-height:none;box-shadow:0 0 6px rgba(0,0,0,.2)}</style><h1 id=yarn><a href=#yarn aria-hidden=true><span class=\\\"icon icon-link\\\"></span></a>yarn</h1><p>最近停到facebook又出了个yarn, 新的node package manager. 噱头是安装能够直接找缓存，不需要每次从网上下。</p><p>于是<code>npm i -g yarn</code>安装后，使用了一番，觉得也就那样，还需要把<code>yarn.lock</code>放到项目中，</p><p><strong>其实<code>npm</code>对于cache也有一些指令处理的。</strong></p><!--more--><h1 id=npm><a href=#npm aria-hidden=true><span class=\\\"icon icon-link\\\"></span></a>npm</h1><pre><code data-query={} data-lang>npm cache ls\\n</code></pre><p>可以查看你本地的cache，之前你的每一次<code>install</code>都会在本地有cache的，默认是放在<code>$HOME/.npm</code>中 npm cache clean 清除本地cache</p><pre><code data-query={} data-lang>npm install react --cache-min 6000\\n</code></pre><p>上面<code>--cache-min</code>指的是是否需要从缓存里面取package，时间不超过6000分钟，超过6000分钟也将从网上download， 还可以<code>--cache-min=Infinity</code>，分钟数设为无穷，这样可以保证了包下载的速度。</p><pre><code data-query={} data-lang>npm install --only=dev\\n</code></pre><p>将会只安装<code>package.json</code>中的<code>devDependencies</code>, 对立的是<code>--only=production</code></p><h1 id=more><a href=#more aria-hidden=true><span class=\\\"icon icon-link\\\"></span></a>more</h1><p><a href=http://www.ruanyifeng.com/blog/2016/01/npm-install.html>阮一峰 npm 模块安装机制简介</a></p>\",\n\t  \"extra\": {\n\t    \"_image-loader_\": [],\n\t    \"_progressive_\": []\n\t  }\n\t}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// npm-cached-option.js","/*markdown-loader*/\nmodule.exports = {\n  \"content\": \"<style>.transformer-react-render{border:1px dashed #959da5;border-radius:5px;display:block}.transformer-react-render-container>pre{max-height:400px;transition:all .2s ease}.transformer-react-render-container>pre.focused{max-height:none;box-shadow:0 0 6px rgba(0,0,0,.2)}</style><h1 id=yarn><a href=#yarn aria-hidden=true><span class=\\\"icon icon-link\\\"></span></a>yarn</h1><p>最近停到facebook又出了个yarn, 新的node package manager. 噱头是安装能够直接找缓存，不需要每次从网上下。</p><p>于是<code>npm i -g yarn</code>安装后，使用了一番，觉得也就那样，还需要把<code>yarn.lock</code>放到项目中，</p><p><strong>其实<code>npm</code>对于cache也有一些指令处理的。</strong></p><!--more--><h1 id=npm><a href=#npm aria-hidden=true><span class=\\\"icon icon-link\\\"></span></a>npm</h1><pre><code data-query={} data-lang>npm cache ls\\n</code></pre><p>可以查看你本地的cache，之前你的每一次<code>install</code>都会在本地有cache的，默认是放在<code>$HOME/.npm</code>中 npm cache clean 清除本地cache</p><pre><code data-query={} data-lang>npm install react --cache-min 6000\\n</code></pre><p>上面<code>--cache-min</code>指的是是否需要从缓存里面取package，时间不超过6000分钟，超过6000分钟也将从网上download， 还可以<code>--cache-min=Infinity</code>，分钟数设为无穷，这样可以保证了包下载的速度。</p><pre><code data-query={} data-lang>npm install --only=dev\\n</code></pre><p>将会只安装<code>package.json</code>中的<code>devDependencies</code>, 对立的是<code>--only=production</code></p><h1 id=more><a href=#more aria-hidden=true><span class=\\\"icon icon-link\\\"></span></a>more</h1><p><a href=http://www.ruanyifeng.com/blog/2016/01/npm-install.html>阮一峰 npm 模块安装机制简介</a></p>\",\n  \"extra\": {\n    \"_image-loader_\": [],\n    \"_progressive_\": []\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/picidae/lib/lib/loaders/markdown-loader!./source/_articles/npm-cached-option.md\n// module id = 1211\n// module chunks = 53"],"sourceRoot":""}