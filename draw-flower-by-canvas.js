webpackJsonp([71,90],{992:function(s,a){s.exports={content:'<iframe src=\'/htm/canvas1.html\' style=\'width:100%; height:500px;\'></iframe>\n> 双击鼠标左键添加动态花瓣，(多了动态效果不好)\n<p>完整Demo地址\n<a href="/htm/canvas1.html">Demo</a></p>\n<!--more-->\n<h2 id="关于-canvas"><a href="#%E5%85%B3%E4%BA%8E-canvas" aria-hidden="true"><span class="icon icon-link"></span></a>关于 <code>canvas</code></h2>\n<p><a href="http://www.w3school.com.cn/tags/html_ref_canvas.asp">参考资料</a></p>\n<blockquote>\n<p>HTML5 <code>canvas</code> 标签用于绘制图像（通过脚本，通常是 JavaScript）。</p>\n</blockquote>\n<h2 id="关于-svg"><a href="#%E5%85%B3%E4%BA%8E-svg" aria-hidden="true"><span class="icon icon-link"></span></a>关于 <code>svg</code></h2>\n<p><a href="http://www.w3school.com.cn/svg/">参考资料</a></p>\n<blockquote>\n<p>SVG 意为可缩放矢量图形（Scalable Vector Graphics）。\nsvg图形能够自由的进行缩放，而不会失真，而canvas是位图图像，放大会有像素点。\nsvg通过标签进行操作画图。</p>\n</blockquote>\n<p>演示可以查看我前一段时间做的\n<a href="http://moyuyc.xyz/compiler">正则表达式->NFA->DFA->MFA，输入<code>x(a|v*)</code>，查看svg效果</a> </p>\n<p><strong>当然，该效果我是用canvas实现的</strong></p>\n<h2 id="废话不多说，上菜！"><a href="#%E5%BA%9F%E8%AF%9D%E4%B8%8D%E5%A4%9A%E8%AF%B4%EF%BC%8C%E4%B8%8A%E8%8F%9C%EF%BC%81" aria-hidden="true"><span class="icon icon-link"></span></a>废话不多说，上菜！</h2>\n<h3 id="解释一下"><a href="#%E8%A7%A3%E9%87%8A%E4%B8%80%E4%B8%8B" aria-hidden="true"><span class="icon icon-link"></span></a>解释一下</h3>\n<ul>\n<li>核心代码</li>\n</ul>\n<pre><code class="hljs language-javascript" data-query="{}" data-lang="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Flower</span>(<span class="hljs-params">c,petals,size,x,y,rotate</span>)</span>{\n\t<span class="hljs-keyword">this</span>.c = c || [<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>];\n\t<span class="hljs-keyword">this</span>.petals = petals || <span class="hljs-number">4</span>;\n\t<span class="hljs-keyword">this</span>.size = size || <span class="hljs-number">5</span>;\n\t<span class="hljs-keyword">this</span>.x = x || <span class="hljs-number">0</span>;\n\t<span class="hljs-keyword">this</span>.y = y || <span class="hljs-number">0</span>;\n\t<span class="hljs-keyword">this</span>.rotate = rotate || <span class="hljs-number">0</span>;\n}\nFlower.prototype.draw = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n\t<span class="hljs-keyword">var</span> _rad = <span class="hljs-keyword">this</span>.size,_num_pts=<span class="hljs-keyword">this</span>.petals,_x=<span class="hljs-keyword">this</span>.x,_y=<span class="hljs-keyword">this</span>.y,c=<span class="hljs-keyword">this</span>.c;\n\tctx.save();\n\tctx.shadowBlur = <span class="hljs-number">30</span>; <span class="hljs-comment">//阴影程度</span>\n\tctx.lineWidth = <span class="hljs-number">1</span>;\n\tctx.shadowColor = utils.rgba(c[<span class="hljs-number">0</span>],c[<span class="hljs-number">1</span>],c[<span class="hljs-number">2</span>],<span class="hljs-number">1</span>); <span class="hljs-comment">//阴影颜色</span>\n\tctx.fillStyle = utils.rgba(c[<span class="hljs-number">0</span>],c[<span class="hljs-number">1</span>],c[<span class="hljs-number">2</span>],<span class="hljs-number">.6</span>); <span class="hljs-comment">//填充颜色</span>\n\tc2 = c.map(<span class="hljs-function">(<span class="hljs-params">x</span>)=></span><span class="hljs-built_in">Math</span>.floor(x/<span class="hljs-number">1.6</span>));           <span class="hljs-comment">//lambda表达式写法</span>\n\tctx.strokeStyle = utils.rgba(c2[<span class="hljs-number">0</span>],c2[<span class="hljs-number">1</span>],c2[<span class="hljs-number">2</span>],<span class="hljs-number">1</span>);  <span class="hljs-comment">//边框颜色</span>\n\t<span class="hljs-keyword">var</span> pts = [];\n\t<span class="hljs-keyword">var</span> _a = <span class="hljs-keyword">this</span>.rotate+(tick*<span class="hljs-number">1</span>);\n\t<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span> ; i &#x3C;= _num_pts ; i++){<span class="hljs-comment">//增量法提高效率</span>\n\t\tpts.push({<span class="hljs-attr">x</span>:utils.P2L(_rad, _a).x,<span class="hljs-attr">y</span>:utils.P2L(_rad, _a).y}); <span class="hljs-comment">//P2L将极坐标转换为平面坐标</span>\n\t\t_a += (<span class="hljs-number">360</span>/_num_pts);\n\t}\n\t<span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">1</span> ; i&#x3C;= _num_pts; i+=<span class="hljs-number">2</span>){\n\t\tidx= i%_num_pts;\n\t\tctx.beginPath();<span class="hljs-comment">//开始绘制</span>\n\t\tctx.moveTo(_x,_y);<span class="hljs-comment">//起点为(_x,_y)</span>\n\t\tctx.bezierCurveTo(_x+pts[i<span class="hljs-number">-1</span>].x,_y+pts[i<span class="hljs-number">-1</span>].y,_x+pts[idx+<span class="hljs-number">1</span>].x,_y+pts[idx+<span class="hljs-number">1</span>].y,_x,_y);<span class="hljs-comment">//绘制贝塞尔曲线</span>\n\t\tctx.stroke();<span class="hljs-comment">//闭合图形边框</span>\n\t\tctx.fill();<span class="hljs-comment">//填充图形</span>\n\t}\n\tctx.restore();\n}\nHTMLCanvasElement.prototype.magicBg = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>{\n\t<span class="hljs-keyword">var</span> ctx = <span class="hljs-keyword">this</span>.getContext(<span class="hljs-string">\'2d\'</span>);\n\t<span class="hljs-keyword">if</span>(!<span class="hljs-keyword">this</span>.grd){\n\t\t<span class="hljs-comment">//实现从画布中心往外呈圆形扩散，渐变。</span>\n\t\t<span class="hljs-keyword">this</span>.grd=ctx.createRadialGradient(<span class="hljs-keyword">this</span>.width/<span class="hljs-number">2</span>,<span class="hljs-keyword">this</span>.height/<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-keyword">this</span>.width/<span class="hljs-number">2</span>,<span class="hljs-keyword">this</span>.height/<span class="hljs-number">2</span>,<span class="hljs-built_in">Math</span>.min(<span class="hljs-keyword">this</span>.width,<span class="hljs-keyword">this</span>.height)/<span class="hljs-number">1.2</span>);\n\t\t<span class="hljs-keyword">this</span>.grd.addColorStop(<span class="hljs-number">0</span>,<span class="hljs-string">"rgba(255,255,255,.25)"</span>);\n\t\t<span class="hljs-keyword">this</span>.grd.addColorStop(<span class="hljs-number">1</span>,<span class="hljs-keyword">this</span>.utils.rgba(<span class="hljs-number">200</span>+<span class="hljs-keyword">this</span>.utils.randomInt(<span class="hljs-number">56</span>),<span class="hljs-number">200</span>+<span class="hljs-keyword">this</span>.utils.randomInt(<span class="hljs-number">56</span>),<span class="hljs-number">200</span>+<span class="hljs-keyword">this</span>.utils.randomInt(<span class="hljs-number">56</span>),<span class="hljs-number">.65</span>));\n\t}\n\tctx.save();\n\tctx.clearRect(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-keyword">this</span>.width,<span class="hljs-keyword">this</span>.height);\n\tctx.fillStyle = <span class="hljs-keyword">this</span>.grd;\n\tctx.fillRect(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-keyword">this</span>.width,<span class="hljs-keyword">this</span>.height);\n\tctx.restore();\n}</code></pre>\n<ul>\n<li>Flower对象解释</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n<th>默认</th>\n<th>类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>c</code></td>\n<td>花瓣的颜色</td>\n<td>[\n255,255,255\n]</td>\n<td>Array</td>\n</tr>\n<tr>\n<td><code>petals</code></td>\n<td>花瓣个数</td>\n<td>4</td>\n<td>Number</td>\n</tr>\n<tr>\n<td><code>size</code></td>\n<td>半径大小</td>\n<td>5</td>\n<td>Number</td>\n</tr>\n<tr>\n<td><code>x</code></td>\n<td>中心 x 坐标</td>\n<td>0</td>\n<td>Number</td>\n</tr>\n<tr>\n<td><code>y</code></td>\n<td>中心 y 坐标</td>\n<td>0</td>\n<td>Number</td>\n</tr>\n<tr>\n<td><code>rotate</code></td>\n<td>绕中心旋转角度</td>\n<td>0</td>\n<td>Number(单位：度)</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><code>Flower.draw</code> 方法解释</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>_rad</code></td>\n<td>radix，对应\n<code>size</code></td>\n</tr>\n<tr>\n<td><code>_num_pts</code></td>\n<td>对应\n<code>petals</code></td>\n</tr>\n<tr>\n<td><code>_x</code></td>\n<td>对应\n<code>x</code></td>\n</tr>\n<tr>\n<td><code>_y</code></td>\n<td>对应\n<code>y</code></td>\n</tr>\n<tr>\n<td><code>c</code></td>\n<td>对应\n<code>c</code></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>关于贝塞尔曲线，<a href="http://bbs.csdn.net/topics/390358020">参考资料</a></li>\n</ul>\n<img src="/images/bezier3.gif" alt="IMG" width="240" height="100" />\n<center>图：三次贝塞尔曲线动态绘制效果</center>\n<img src="/htm/images/canvas1.png" alt="IMG" width="746" height="725" />\n<center>图：花瓣与其贝塞尔曲线控制点</center>\n- 怎么使用？\n1.\t`<script src=\'drawflower.js\'></script>`\n2.\t`canvas.drawFlower(option);`\n<pre><code class="hljs language-javascript" data-query="{}" data-lang="javascript"><span class="hljs-comment">//default option</span>\n{\n\t<span class="hljs-attr">animate</span>:<span class="hljs-literal">false</span>,\n\t<span class="hljs-attr">rotate</span>:<span class="hljs-number">90</span>,  \n\t<span class="hljs-attr">randomSize</span>:<span class="hljs-literal">true</span>,\n\t<span class="hljs-attr">randomColor</span>:<span class="hljs-literal">true</span>,\n\t<span class="hljs-attr">randomPetals</span>: <span class="hljs-literal">true</span>,\n\t<span class="hljs-attr">pos</span>:{\n\t\t<span class="hljs-attr">x</span>:<span class="hljs-keyword">this</span>.width/<span class="hljs-number">2</span>,\n\t\t<span class="hljs-attr">y</span>:<span class="hljs-keyword">this</span>.height/<span class="hljs-number">2</span>\n\t}\n}</code></pre>\n<p>or</p>\n<pre><code class="hljs language-javascript" data-query="{}" data-lang="javascript">{\n\t<span class="hljs-attr">animate</span>:<span class="hljs-literal">true</span>,\n\t<span class="hljs-attr">rotate</span>:<span class="hljs-number">-20</span>,  \n\t<span class="hljs-attr">randomSize</span>:<span class="hljs-literal">false</span>,\n\t<span class="hljs-attr">size</span>:<span class="hljs-number">10</span>,\n\t<span class="hljs-attr">randomColor</span>:<span class="hljs-literal">false</span>,\n\t<span class="hljs-attr">color</span>:[<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,<span class="hljs-number">100</span>],\n\t<span class="hljs-attr">randomPetals</span>: <span class="hljs-literal">false</span>,\n\t<span class="hljs-attr">petals</span>:<span class="hljs-number">6</span>,\n\t<span class="hljs-attr">pos</span>:{\n\t\t<span class="hljs-attr">x</span>:<span class="hljs-number">0</span>,\n\t\t<span class="hljs-attr">y</span>:<span class="hljs-number">0</span>\n\t}\n}</code></pre>\n<h3 id="forkit"><a href="#forkit" aria-hidden="true"><span class="icon icon-link"></span></a>ForkIt</h3>\n<p><a href="https://github.com/moyuyc/drawflower">Fork!</a></p>\n',extra:{}}}});